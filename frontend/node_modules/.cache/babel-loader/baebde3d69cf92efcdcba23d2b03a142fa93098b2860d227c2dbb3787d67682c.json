{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\weerasi-ps19259\\\\IdeaProjects\\\\payroll-system\\\\frontend\\\\src\\\\components\\\\Employee\\\\AddNewEmployee\\\\AddNewEmployee.js\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useState } from 'react';\r\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\r\n\r\nfunction AddNewEmployee() {\r\n    const [shortName, setShortName] = useState('');\r\n  const [department, setDepartment] = useState(null); // Initialize as null\r\n  const [departments] = useState([\r\n    { departmentId: 1, name: 'Kitchen'}\r\n    \r\n  ]);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const employeeData = {\r\n      shortName,\r\n      department,\r\n      employeeType:\"PERMANENT\",\r\n      status: \"ACTIVE\"\r\n    };\r\n\r\n    try {\r\n      const responseData = await addEmployee(employeeData);\r\n      console.log('Employee added:', responseData);\r\n      setSuccess('Employee added successfully!');\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message);\r\n      setSuccess(null);\r\n    }\r\n\r\n    // Clear the form\r\n    setShortName('');\r\n    setDepartment(null); // Reset department selection\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>\r\n          Employee Short Name:\r\n          <input\r\n            type=\"text\"\r\n            value={shortName}\r\n            onChange={(e) => setShortName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Department:\r\n          <select\r\n            value={department ? department.departmentId : ''} // Use department ID for select value\r\n            onChange={(e) => {\r\n              const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\r\n              setDepartment(selectedDept || null); // Set the selected department object\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\">Select a department</option>\r\n            {departments.map((dept) => (\r\n              <option key={dept.departmentId} value={dept.departmentId}>\r\n                {dept.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Add</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNewEmployee;\r\n*/\n\nimport React, { useState } from 'react';\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddNewEmployee() {\n  _s();\n  const [shortName, setShortName] = useState('');\n  const [department, setDepartment] = useState(null); // Initialize as null\n  const [departments] = useState([{\n    departmentId: 1,\n    name: 'Kitchen'\n  }, {\n    departmentId: 2,\n    name: 'Steward'\n  }]);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const employeeData = {\n      shortName,\n      department,\n      employeeType: \"PERMANENT\",\n      status: \"ACTIVE\"\n    };\n    try {\n      const responseData = await addEmployee(employeeData);\n      console.log('Employee added:', responseData);\n      setSuccess('Employee added successfully!');\n      setError(null);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n      setSuccess(null);\n    }\n\n    // Clear the form\n    setShortName('');\n    setDepartment(null); // Reset department selection\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Employee Short Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: shortName,\n          onChange: e => setShortName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Department:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: department ? department.departmentId : '' // Use department ID for select value\n          ,\n          onChange: e => {\n            const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\n            setDepartment(selectedDept || null); // Set the selected department object\n          },\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dept.departmentId,\n            children: dept.name\n          }, dept.departmentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(AddNewEmployee, \"fA9beLYMnoTSug0yxDPJfVFPfc8=\");\n_c = AddNewEmployee;\n;\nexport default AddNewEmployee;\nvar _c;\n$RefreshReg$(_c, \"AddNewEmployee\");","map":{"version":3,"names":["React","useState","addEmployee","jsxDEV","_jsxDEV","AddNewEmployee","_s","shortName","setShortName","department","setDepartment","departments","departmentId","name","error","setError","success","setSuccess","handleSubmit","e","preventDefault","employeeData","employeeType","status","responseData","console","log","message","onSubmit","children","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","selectedDept","find","dept","Number","map","style","color","_c","$RefreshReg$"],"sources":["C:/Users/weerasi-ps19259/IdeaProjects/payroll-system/frontend/src/components/Employee/AddNewEmployee/AddNewEmployee.js"],"sourcesContent":["/*\r\nimport React, { useState } from 'react';\r\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\r\n\r\nfunction AddNewEmployee() {\r\n    const [shortName, setShortName] = useState('');\r\n  const [department, setDepartment] = useState(null); // Initialize as null\r\n  const [departments] = useState([\r\n    { departmentId: 1, name: 'Kitchen'}\r\n    \r\n  ]);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const employeeData = {\r\n      shortName,\r\n      department,\r\n      employeeType:\"PERMANENT\",\r\n      status: \"ACTIVE\"\r\n    };\r\n\r\n    try {\r\n      const responseData = await addEmployee(employeeData);\r\n      console.log('Employee added:', responseData);\r\n      setSuccess('Employee added successfully!');\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message);\r\n      setSuccess(null);\r\n    }\r\n\r\n    // Clear the form\r\n    setShortName('');\r\n    setDepartment(null); // Reset department selection\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>\r\n          Employee Short Name:\r\n          <input\r\n            type=\"text\"\r\n            value={shortName}\r\n            onChange={(e) => setShortName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Department:\r\n          <select\r\n            value={department ? department.departmentId : ''} // Use department ID for select value\r\n            onChange={(e) => {\r\n              const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\r\n              setDepartment(selectedDept || null); // Set the selected department object\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\">Select a department</option>\r\n            {departments.map((dept) => (\r\n              <option key={dept.departmentId} value={dept.departmentId}>\r\n                {dept.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Add</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNewEmployee;\r\n*/\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\r\n\r\nfunction AddNewEmployee() {\r\n    const [shortName, setShortName] = useState('');\r\n  const [department, setDepartment] = useState(null); // Initialize as null\r\n  const [departments] = useState([\r\n    { departmentId: 1, name: 'Kitchen'},\r\n    {departmentId: 2, name:'Steward'}\r\n    \r\n  ]);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const employeeData = {\r\n      shortName,\r\n      department,\r\n      employeeType:\"PERMANENT\",\r\n      status: \"ACTIVE\"\r\n    };\r\n\r\n    try {\r\n      const responseData = await addEmployee(employeeData);\r\n      console.log('Employee added:', responseData);\r\n      setSuccess('Employee added successfully!');\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message);\r\n      setSuccess(null);\r\n    }\r\n\r\n    // Clear the form\r\n    setShortName('');\r\n    setDepartment(null); // Reset department selection\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>\r\n          Employee Short Name:\r\n          <input\r\n            type=\"text\"\r\n            value={shortName}\r\n            onChange={(e) => setShortName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Department:\r\n          <select\r\n            value={department ? department.departmentId : ''} // Use department ID for select value\r\n            onChange={(e) => {\r\n              const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\r\n              setDepartment(selectedDept || null); // Set the selected department object\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\">Select a department</option>\r\n            {departments.map((dept) => (\r\n              <option key={dept.departmentId} value={dept.departmentId}>\r\n                {dept.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Add</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNewEmployee;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}