{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\weerasi-ps19259\\\\IdeaProjects\\\\payroll-system\\\\frontend\\\\src\\\\components\\\\Employee\\\\AddNewEmployee\\\\AddNewEmployee.js\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useState } from 'react';\r\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\r\n\r\nfunction AddNewEmployee() {\r\n    const [shortName, setShortName] = useState('');\r\n  const [department, setDepartment] = useState(null); // Initialize as null\r\n  const [departments] = useState([\r\n    { departmentId: 1, name: 'Kitchen'}\r\n    \r\n  ]);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const employeeData = {\r\n      shortName,\r\n      department,\r\n      employeeType:\"PERMANENT\",\r\n      status: \"ACTIVE\"\r\n    };\r\n\r\n    try {\r\n      const responseData = await addEmployee(employeeData);\r\n      console.log('Employee added:', responseData);\r\n      setSuccess('Employee added successfully!');\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message);\r\n      setSuccess(null);\r\n    }\r\n\r\n    // Clear the form\r\n    setShortName('');\r\n    setDepartment(null); // Reset department selection\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>\r\n          Employee Short Name:\r\n          <input\r\n            type=\"text\"\r\n            value={shortName}\r\n            onChange={(e) => setShortName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Department:\r\n          <select\r\n            value={department ? department.departmentId : ''} // Use department ID for select value\r\n            onChange={(e) => {\r\n              const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\r\n              setDepartment(selectedDept || null); // Set the selected department object\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\">Select a department</option>\r\n            {departments.map((dept) => (\r\n              <option key={dept.departmentId} value={dept.departmentId}>\r\n                {dept.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Add</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNewEmployee;\r\n*/\n\n/*\r\nimport React, { useState } from 'react';\r\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\r\n\r\nfunction AddNewEmployee() {\r\n    const [shortName, setShortName] = useState('');\r\n    const [fullName, setFullName] = useState('');\r\n    const [department, setDepartment] = useState(null); // Initialize as null\r\n    const [designation, setDesignation] = useState('');\r\n    const [nicNo, setNicNo] = useState('');\r\n    const [employeeType, setEmployeeType] = useState(''); // New state for employee type\r\n\r\n    const departments = [\r\n        { departmentId: 1, name: 'Kitchen' },\r\n        { departmentId: 2, name: 'Steward' },\r\n        { departmentId: 3, name: 'Back Office' },\r\n        { departmentId: 4, name: 'Front Office' },\r\n        { departmentId: 5, name: 'Cleaning & Maintenance' }\r\n    ];\r\n\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const employeeData = {\r\n            shortName,\r\n            fullName,\r\n            department,\r\n            designation,\r\n            nicNo,\r\n            employeeType, // Include employee type in the employee data\r\n            status: \"ACTIVE\"\r\n        };\r\n\r\n        console.log('Employee Data:', employeeData); // Log employee data\r\n\r\n        try {\r\n            const responseData = await addEmployee(employeeData);\r\n            console.log('Employee added:', responseData);\r\n            setSuccess('Employee added successfully!');\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setError(error.message);\r\n            setSuccess(null);\r\n        }\r\n\r\n        // Clear the form\r\n        setShortName('');\r\n        setFullName('');\r\n        setDepartment(null); // Reset department selection\r\n        setDesignation('');\r\n        setNicNo('');\r\n        setEmployeeType(''); // Reset employee type selection\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Employee Short Name:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={shortName}\r\n                            onChange={(e) => setShortName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Full Name:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={fullName}\r\n                            onChange={(e) => setFullName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                \r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Department:</span>\r\n                        <select\r\n                            value={department ? department.departmentId : ''} // Use department ID for select value\r\n                            onChange={(e) => {\r\n                                const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\r\n                                setDepartment(selectedDept || null); // Set the selected department object\r\n                            }}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select a department</option>\r\n                            {departments.map((dept) => (\r\n                                <option key={dept.departmentId} value={dept.departmentId}>\r\n                                    {dept.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Designation:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={designation}\r\n                            onChange={(e) => setDesignation(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>NIC No:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={nicNo}\r\n                            onChange={(e) => setNicNo(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Employee Type:</span>\r\n                        <select\r\n                            value={employeeType}\r\n                            onChange={(e) => setEmployeeType(e.target.value)}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select employee type</option>\r\n                            <option value=\"PERMANENT\">Permanent</option>\r\n                            <option value=\"TEMPORARY\">Temporary</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"add-button\">Add</button>\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                {success && <p style={{ color: 'green' }}>{success}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewEmployee;\r\n*/\n\nimport React, { useState } from 'react';\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddNewEmployee() {\n  _s();\n  const [shortName, setShortName] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [department, setDepartment] = useState(null); // Initialize as null\n  const [designation, setDesignation] = useState('');\n  const [nicNo, setNicNo] = useState('');\n  const [employeeType, setEmployeeType] = useState(''); // New state for employee type\n  const [epfNo, setEpfNo] = useState(''); // New state for EPF No\n\n  const departments = [{\n    departmentId: 1,\n    name: 'Kitchen'\n  }, {\n    departmentId: 2,\n    name: 'Steward'\n  }, {\n    departmentId: 3,\n    name: 'Back Office'\n  }, {\n    departmentId: 4,\n    name: 'Front Office'\n  }, {\n    departmentId: 5,\n    name: 'Cleaning & Maintenance'\n  }];\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const employeeData = {\n      shortName,\n      fullName,\n      department,\n      designation,\n      nicNo,\n      employeeType,\n      // Include employee type in the employee data\n      epfNo: employeeType === 'Permanent' ? epfNo : '',\n      // Include EPF No if Permanent\n      status: \"ACTIVE\"\n    };\n    console.log('Employee Data:', employeeData); // Log employee data\n\n    try {\n      const responseData = await addEmployee(employeeData);\n      console.log('Employee added:', responseData);\n      setSuccess('Employee added successfully!');\n      setError(null);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n      setSuccess(null);\n    }\n\n    // Clear the form\n    setShortName('');\n    setFullName('');\n    setDepartment(null); // Reset department selection\n    setDesignation('');\n    setNicNo('');\n    setEmployeeType(''); // Reset employee type selection\n    setEpfNo(''); // Reset EPF No\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-employee\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Employee Short Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: shortName,\n            onChange: e => setShortName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-employee\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Full Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fullName,\n            onChange: e => setFullName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-employee\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Department:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: department ? department.departmentId : '' // Use department ID for select value\n            ,\n            onChange: e => {\n              const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\n              setDepartment(selectedDept || null); // Set the selected department object\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dept.departmentId,\n              children: dept.name\n            }, dept.departmentId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-employee\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Designation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: designation,\n            onChange: e => setDesignation(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-employee\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"NIC No:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nicNo,\n            onChange: e => setNicNo(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-employee\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Employee Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: employeeType,\n            onChange: e => {\n              setEmployeeType(e.target.value);\n              if (e.target.value !== 'Permanent') {\n                setEpfNo(''); // Clear EPF No if not Permanent\n              }\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select employee type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PERMAMENT\",\n              children: \"Permanent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"TEMPORARY\",\n              children: \"Temporary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this), employeeType === 'PERMAMENT' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-employee\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"EPF No:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: epfNo,\n            onChange: e => setEpfNo(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"add-button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 9\n  }, this);\n}\n_s(AddNewEmployee, \"O3B+R2BE7Ol4addRYhujMYCQCCo=\");\n_c = AddNewEmployee;\n;\nexport default AddNewEmployee;\nvar _c;\n$RefreshReg$(_c, \"AddNewEmployee\");","map":{"version":3,"names":["React","useState","addEmployee","jsxDEV","_jsxDEV","AddNewEmployee","_s","shortName","setShortName","fullName","setFullName","department","setDepartment","designation","setDesignation","nicNo","setNicNo","employeeType","setEmployeeType","epfNo","setEpfNo","departments","departmentId","name","error","setError","success","setSuccess","handleSubmit","e","preventDefault","employeeData","status","console","log","responseData","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","selectedDept","find","dept","Number","map","style","color","_c","$RefreshReg$"],"sources":["C:/Users/weerasi-ps19259/IdeaProjects/payroll-system/frontend/src/components/Employee/AddNewEmployee/AddNewEmployee.js"],"sourcesContent":["/*\r\nimport React, { useState } from 'react';\r\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\r\n\r\nfunction AddNewEmployee() {\r\n    const [shortName, setShortName] = useState('');\r\n  const [department, setDepartment] = useState(null); // Initialize as null\r\n  const [departments] = useState([\r\n    { departmentId: 1, name: 'Kitchen'}\r\n    \r\n  ]);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const employeeData = {\r\n      shortName,\r\n      department,\r\n      employeeType:\"PERMANENT\",\r\n      status: \"ACTIVE\"\r\n    };\r\n\r\n    try {\r\n      const responseData = await addEmployee(employeeData);\r\n      console.log('Employee added:', responseData);\r\n      setSuccess('Employee added successfully!');\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError(error.message);\r\n      setSuccess(null);\r\n    }\r\n\r\n    // Clear the form\r\n    setShortName('');\r\n    setDepartment(null); // Reset department selection\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>\r\n          Employee Short Name:\r\n          <input\r\n            type=\"text\"\r\n            value={shortName}\r\n            onChange={(e) => setShortName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Department:\r\n          <select\r\n            value={department ? department.departmentId : ''} // Use department ID for select value\r\n            onChange={(e) => {\r\n              const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\r\n              setDepartment(selectedDept || null); // Set the selected department object\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\">Select a department</option>\r\n            {departments.map((dept) => (\r\n              <option key={dept.departmentId} value={dept.departmentId}>\r\n                {dept.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Add</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNewEmployee;\r\n*/\r\n\r\n/*\r\nimport React, { useState } from 'react';\r\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\r\n\r\nfunction AddNewEmployee() {\r\n    const [shortName, setShortName] = useState('');\r\n    const [fullName, setFullName] = useState('');\r\n    const [department, setDepartment] = useState(null); // Initialize as null\r\n    const [designation, setDesignation] = useState('');\r\n    const [nicNo, setNicNo] = useState('');\r\n    const [employeeType, setEmployeeType] = useState(''); // New state for employee type\r\n\r\n    const departments = [\r\n        { departmentId: 1, name: 'Kitchen' },\r\n        { departmentId: 2, name: 'Steward' },\r\n        { departmentId: 3, name: 'Back Office' },\r\n        { departmentId: 4, name: 'Front Office' },\r\n        { departmentId: 5, name: 'Cleaning & Maintenance' }\r\n    ];\r\n\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const employeeData = {\r\n            shortName,\r\n            fullName,\r\n            department,\r\n            designation,\r\n            nicNo,\r\n            employeeType, // Include employee type in the employee data\r\n            status: \"ACTIVE\"\r\n        };\r\n\r\n        console.log('Employee Data:', employeeData); // Log employee data\r\n\r\n        try {\r\n            const responseData = await addEmployee(employeeData);\r\n            console.log('Employee added:', responseData);\r\n            setSuccess('Employee added successfully!');\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setError(error.message);\r\n            setSuccess(null);\r\n        }\r\n\r\n        // Clear the form\r\n        setShortName('');\r\n        setFullName('');\r\n        setDepartment(null); // Reset department selection\r\n        setDesignation('');\r\n        setNicNo('');\r\n        setEmployeeType(''); // Reset employee type selection\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Employee Short Name:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={shortName}\r\n                            onChange={(e) => setShortName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Full Name:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={fullName}\r\n                            onChange={(e) => setFullName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                \r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Department:</span>\r\n                        <select\r\n                            value={department ? department.departmentId : ''} // Use department ID for select value\r\n                            onChange={(e) => {\r\n                                const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\r\n                                setDepartment(selectedDept || null); // Set the selected department object\r\n                            }}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select a department</option>\r\n                            {departments.map((dept) => (\r\n                                <option key={dept.departmentId} value={dept.departmentId}>\r\n                                    {dept.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Designation:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={designation}\r\n                            onChange={(e) => setDesignation(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>NIC No:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={nicNo}\r\n                            onChange={(e) => setNicNo(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Employee Type:</span>\r\n                        <select\r\n                            value={employeeType}\r\n                            onChange={(e) => setEmployeeType(e.target.value)}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select employee type</option>\r\n                            <option value=\"PERMANENT\">Permanent</option>\r\n                            <option value=\"TEMPORARY\">Temporary</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"add-button\">Add</button>\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                {success && <p style={{ color: 'green' }}>{success}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewEmployee;\r\n*/\r\n\r\nimport React, { useState } from 'react';\r\nimport { addEmployee } from '../../../services/api'; // Adjust the import path as necessary\r\n\r\nfunction AddNewEmployee() {\r\n    const [shortName, setShortName] = useState('');\r\n    const [fullName, setFullName] = useState('');\r\n    const [department, setDepartment] = useState(null); // Initialize as null\r\n    const [designation, setDesignation] = useState('');\r\n    const [nicNo, setNicNo] = useState('');\r\n    const [employeeType, setEmployeeType] = useState(''); // New state for employee type\r\n    const [epfNo, setEpfNo] = useState(''); // New state for EPF No\r\n\r\n    const departments = [\r\n        { departmentId: 1, name: 'Kitchen' },\r\n        { departmentId: 2, name: 'Steward' },\r\n        { departmentId: 3, name: 'Back Office' },\r\n        { departmentId: 4, name: 'Front Office' },\r\n        { departmentId: 5, name: 'Cleaning & Maintenance' }\r\n    ];\r\n\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const employeeData = {\r\n            shortName,\r\n            fullName,\r\n            department,\r\n            designation,\r\n            nicNo,\r\n            employeeType, // Include employee type in the employee data\r\n            epfNo: employeeType === 'Permanent' ? epfNo : '', // Include EPF No if Permanent\r\n            status: \"ACTIVE\"\r\n        };\r\n\r\n        console.log('Employee Data:', employeeData); // Log employee data\r\n\r\n        try {\r\n            const responseData = await addEmployee(employeeData);\r\n            console.log('Employee added:', responseData);\r\n            setSuccess('Employee added successfully!');\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setError(error.message);\r\n            setSuccess(null);\r\n        }\r\n\r\n        // Clear the form\r\n        setShortName('');\r\n        setFullName('');\r\n        setDepartment(null); // Reset department selection\r\n        setDesignation('');\r\n        setNicNo('');\r\n        setEmployeeType(''); // Reset employee type selection\r\n        setEpfNo(''); // Reset EPF No\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Employee Short Name:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={shortName}\r\n                            onChange={(e) => setShortName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Full Name:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={fullName}\r\n                            onChange={(e) => setFullName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                \r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Department:</span>\r\n                        <select\r\n                            value={department ? department.departmentId : ''} // Use department ID for select value\r\n                            onChange={(e) => {\r\n                                const selectedDept = departments.find(dept => dept.departmentId === Number(e.target.value));\r\n                                setDepartment(selectedDept || null); // Set the selected department object\r\n                            }}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select a department</option>\r\n                            {departments.map((dept) => (\r\n                                <option key={dept.departmentId} value={dept.departmentId}>\r\n                                    {dept.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Designation:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={designation}\r\n                            onChange={(e) => setDesignation(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>NIC No:</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={nicNo}\r\n                            onChange={(e) => setNicNo(e.target.value)}\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className='add-new-employee'>\r\n                    <label>\r\n                        <span>Employee Type:</span>\r\n                        <select\r\n                            value={employeeType}\r\n                            onChange={(e) => {\r\n                                setEmployeeType(e.target.value);\r\n                                if (e.target.value !== 'Permanent') {\r\n                                    setEpfNo(''); // Clear EPF No if not Permanent\r\n                                }\r\n                            }}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select employee type</option>\r\n                            <option value=\"PERMAMENT\">Permanent</option>\r\n                            <option value=\"TEMPORARY\">Temporary</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                {/* Conditionally render the EPF No input field */}\r\n                {employeeType === 'PERMAMENT' && (\r\n                    <div className='add-new-employee'>\r\n                        <label>\r\n                            <span>EPF No:</span>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={epfNo}\r\n                                onChange={(e) => setEpfNo(e.target.value)}\r\n                                required\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                )}\r\n\r\n                <button type=\"submit\" className=\"add-button\">Add</button>\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                {success && <p style={{ color: 'green' }}>{success}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewEmployee;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}